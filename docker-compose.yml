version: '3.8'

services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=clubdatabase
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root

  web:
    build:
      context: . # Adjust the path if needed
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000  
    volumes:
      - .:/app:rw #  Mark the app code as read-only in the container
      - staticfiles:/app/staticfiles:rw # Mount the named volume for static files
      - media:/app/media:rw # Mount the named volume for media files
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgres://root:root@db:5432/clubdatabase


  nginx:  # Nginx service
    image: nginx:latest 
    ports:
      - "8080:8080" 
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:rw # Mount Nginx config
      - staticfiles:/app/staticfiles:rw # Share static files volume
      - media:/app/media:rw   # Share media files volume 
    depends_on:
      - web

  redis:  # Redis service
    image: "redis:alpine"

  worker: # RQ worker service
    build:
      context: .
      dockerfile: Dockerfile.worker
    command: > # Run the worker for the 'default' queue
        sh -c "python manage.py rqworker default"  
    volumes:
      - .:/app:ro
      - staticfiles:/app/staticfiles:ro
      - media:/app/media:ro
    environment:
      - DATABASE_URL=postgres://root:root@db:5432/clubdatabase
    deploy:
      replicas: 1
    depends_on:
      - redis

volumes:
  postgres_data:
  staticfiles:
  media: